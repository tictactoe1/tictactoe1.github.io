{"version":3,"sources":["logo.svg","tictactoe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Square","props","react_default","a","createElement","className","onClick","value","Board","i","_this","this","squares","renderSquare","React","Component","Game","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","position","history","Array","fill","stepNumber","xIsNext","e","new_pos","key","setState","slice","length","calculateWinner","concat","step","status","_this3","current","winner","moves","map","move","desc","jumpTo","tictactoe_Board","handleClick","lines","_lines$i","slicedToArray","b","c","App","tictactoe","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41143223.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n  \r\nclass Board extends React.Component {\r\nrenderSquare(i) {\r\n    return (\r\n    <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n    />\r\n    );\r\n}\r\n\r\nrender() {\r\n    return (\r\n    <div>\r\n        <div className=\"board-row\">\r\n        {this.renderSquare(0)}\r\n        {this.renderSquare(1)}\r\n        {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n        {this.renderSquare(3)}\r\n        {this.renderSquare(4)}\r\n        {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n        {this.renderSquare(6)}\r\n        {this.renderSquare(7)}\r\n        {this.renderSquare(8)}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n}\r\n  \r\nclass Game extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    position: 4,\r\n    history: [\r\n        {\r\n       \r\n        squares: Array(9).fill(null)\r\n        }\r\n    ],\r\n    stepNumber: 0,\r\n    xIsNext: true\r\n    };\r\n}\r\n\r\nhandleKeydown(e) {\r\n    let new_pos;\r\n    switch(e.key) {\r\n      case 'ArrowUp':\r\n        this.state.position - 3 > 0 ? new_pos = this.state.position - 3 : new_pos = 0;\r\n        this.setState({position: new_pos});\r\n        break;\r\n      case 'ArrowDown':\r\n        this.state.position + 3 > 8 ? new_pos = this.state.position + 3 : new_pos = 8;\r\n        this.setState({position: new_pos});\r\n        break;\r\n      case 'ArrowRight':\r\n        this.state.position + 1 > 8 ? new_pos = this.state.position + 1 : new_pos = 8;\r\n        this.setState({position: new_pos});\r\n        break;\r\n      case 'ArrowLeft': \r\n        this.state.position -1 > 0 ? new_pos = this.state.position - 1 : new_pos = 0;\r\n        this.setState({position: new_pos});\r\n        break;\r\n    }\r\n}\r\n\r\nhandleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n    return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n    history: history.concat([\r\n        {\r\n        squares: squares\r\n        }\r\n    ]),\r\n    stepNumber: history.length,\r\n    xIsNext: !this.state.xIsNext\r\n    });\r\n}\r\n\r\njumpTo(step) {\r\n    this.setState({\r\n    stepNumber: step,\r\n    xIsNext: (step % 2) === 0\r\n    });\r\n}\r\n\r\nrender() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n    const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n    return (\r\n        <li key={move}>\r\n        <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n    );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n    status = \"Winner: \" + winner;\r\n    } else {\r\n    status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n    <div className=\"game\">\r\n        <div className=\"game-board\">\r\n        <Board\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n        />\r\n        </div>\r\n        <div>{this.state.position}</div>\r\n        <div className=\"game-info\">\r\n        <div>{status}</div>\r\n        <ol>{moves}</ol>\r\n        \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\n// ========================================\r\n\r\n//ReactDOM.render(<Game />, document.getElementById(\"root\"));\r\nexport default Game;\r\n\r\nfunction calculateWinner(squares) {\r\nconst lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n];\r\nfor (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n    return squares[a];\r\n    }\r\n}\r\nreturn null;\r\n}\r\n  ","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Game from './tictactoe.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <Game/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}